name: AUR Auto-Update

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest
    steps:
      - name: Install dependencies
        run: |
          pacman -Syu --noconfirm
          pacman -S --noconfirm git openssh jq base-devel pacman-contrib

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Mark repository as safe
        run: git config --global --add safe.directory "/__w/openai-codex-autoup-bin/openai-codex-autoup-bin"

      - name: Set up SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan aur.archlinux.org >> ~/.ssh/known_hosts

      - name: Run update script
        id: update
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ./updpkg.sh

      - name: Commit and push changes to AUR
        run: |
          # Clone the AUR repository into a temporary directory, specifying the SSH key and disabling strict host key checking
          GIT_SSH_COMMAND="ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no" git clone "ssh://aur@aur.archlinux.org/openai-codex-autoup-bin.git" /tmp/aur-repo

          # Copy the updated files from our `aur` subdirectory
          cp -af aur/* /tmp/aur-repo/

          # Navigate into the cloned repo, configure git, and commit/push if changes exist
          cd /tmp/aur-repo
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

          git add .
          if git diff --staged --quiet; then
            echo "No changes to commit to AUR."
          else
            git commit -m "Bump to ${{ steps.update.outputs.latest_version }}"
            git push origin master
          fi
